FROM node:alpine AS deps
WORKDIR /app
COPY package*.json tsconfig*.json yarn.lock ./
RUN yarn install  

# Rebuild the source code only when needed
FROM node:alpine AS builder
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules
RUN yarn prisma generate && yarn build

# Production image, copy all the files and run next
FROM node:alpine AS runner
WORKDIR /app
ENV NODE_ENV production
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/tsconfig.build.json ./tsconfig.build.json

ENV PORT 3100
ENV NODE_ENV staging
ENV URL_META_AUTH_STRING gmail
ENV DATABASE_URL mongodb
ENV CRYPTO_SECRET defualt
ENV SENDGRID_API_KEY SG
ENV CLIENT_BASE_URL https://a-comosus.com

EXPOSE 3100
CMD ["node", "dist/main"]